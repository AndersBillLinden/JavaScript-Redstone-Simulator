{"ts":1370055603948,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * JavaScript Redstone Simulator\n * Copyright (C) 2012  Jonathan Lydall (Email: jonathan.lydall@gmail.com)\n * \n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. \n * \n */\n\ncom.mordritch.mcSim.documentInfo = function(gui) {\n\tvar self = this; \n\tvar L10n = gui.localization;\n\tvar modal = new com.mordritch.mcSim.guiFullModal(gui);\n\t\n\tvar construct = function() {\n\t\tmodal.addButton({\n\t\t\tlabel: L10n.getString(\"button.text.ok\"),\n\t\t\tonActivateFunction: function() {\n\t\t\t\tvalidateForm();\n\t\t\t}\n\t\t});\n\t\t\n\t}\n\t\n\tthis.show = function() {\n\t\tpopulateForm();\n\t\tmodal.show();\n\t\t$('#documentInfo_title').focus();\n\t}\n\t\n\tvar populateForm = function() {\n\t\tvar title = gui.schematicMetadata.title;\n\t\tvar fileName = gui.schematicMetadata.fileName;\n\t\tvar fileSize = gui.schematicMetadata.fileSize;\n\t\tvar description = gui.schematicMetadata.description;\n\t\tvar xSize = gui.mcSim.World.worldData.getSizeX();\n\t\tvar ySize = gui.mcSim.World.worldData.getSizeY();\n\t\tvar zSize = gui.mcSim.World.worldData.getSizeZ();\n\t\t\n\t\tmodal.setContent(\n\t\t\t'<div class=\"documentInfo standardForm\">' +\n\t\t\t\t'<form>' +\n\t\t\t\t\t'<p><b>'+L10n.getString(\"document.info.prompt.title\")+'</b></p>' +\n\t\n\t\t\t\t\t'<p>'+L10n.getString('document.title') +'<br/>' +\n\t\t\t\t\t'<input type=\"text\" class=\"text\" id=\"documentInfo_title\" value=\"\"> <span class=\"errorText\" id=\"documentInfo_title_error\"></span></p>' +\n\t\n\t\t\t\t\t'<p>'+L10n.getString('document.filename') +'<br/>' +\n\t\t\t\t\t'<input type=\"text\" class=\"text\" id=\"documentInfo_filename\" value=\"\"> <span class=\"errorText\" id=\"documentInfo_filename_error\"></span></p>' +\n\t\n\t\t\t\t\t'<p>'+L10n.getString('document.filesize') +'<br/>' +\n\t\t\t\t\t'<span class=\"readonly\">' + fileSize + ' bytes</span></p>' +\n\n\t\t\t\t\t'<p>' +\n\t\t\t\t\t\tL10n.getString('document.width')  + ' <span class=\"readonly_short\">' + zSize + '</span> ' +\n\t\t\t\t\t\tL10n.getString('document.height') + ' <span class=\"readonly_short\">' + xSize + '</span> ' +\n\t\t\t\t\t\tL10n.getString('document.layers') +\t' <span class=\"readonly_short\">' + ySize + '</span> ' +\n\t\t\t\t\t'</p>' +\n\n\t\t\t\t\t'<p>'+L10n.getString('document.description') +'<br/>' +\n\t\t\t\t\t'<textarea id=\"documentInfo_description\"></textarea> <span class=\"errorText\" id=\"documentInfo_description_error\"></span></p>' +\n\t\t\t\t'</form>' +\n\t\t\t'</div>'\n\t\t);\n\t\t\n\t\t$('#documentInfo_title').val(title);\n\t\t$('#documentInfo_filename').val(fileName);\n\t\t$('#documentInfo_description').val(description);\n\n\t\t$('.documentInfo input').bind('keyup', function(e) {\n\t\t\tif (e.which == 13) validateForm();\n\t\t});\n\t}\n\t\n\tvar validateForm = function() {\n\t\tvar inputError = false;\n\t\tvar dataToCheck = [\n\t\t\t{\n\t\t\t\tid: '#documentInfo_title',\n\t\t\t\tmax: 65535,\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '#documentInfo_filename',\n\t\t\t\tmax: 64,\n\t\t\t\tmin: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '#documentInfo_description',\n\t\t\t\tmax: 65535,\n\t\t\t\tmin: 0\n\t\t\t}\n\t\t];\n\t\t\n\t\tfor (var i=0; i<dataToCheck.length; i++) {\n\t\t\tif (\n\t\t\t\t$(dataToCheck[i].id).val().length > dataToCheck[i].max ||\n\t\t\t\t$(dataToCheck[i].id).val().length < dataToCheck[i].min\n\t\t\t) {\n\t\t\t\tinputError = true;\n\t\t\t\t$(dataToCheck[i].id + '_error').text(L10n.getString(\"error.value.string.length\", dataToCheck[i].min, dataToCheck[i].max));\n\t\t\t\t$(dataToCheck[i].id + '_error').prepend('<br/>');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$(dataToCheck[i].id + '_error').text('');\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!inputError) {\n\t\t\tgui.setSchematicMetadata({\n\t\t\t\ttitle: $('#documentInfo_title').val(),\n\t\t\t\tfileName: $('#documentInfo_filename').val(),\n\t\t\t\tdescription: $('#documentInfo_description').val()\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\tmodal.hide();\n\t\t}\n\t}\n\t\n\tconstruct();\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":4152}]],"length":4152}
