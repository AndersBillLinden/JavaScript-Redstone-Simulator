{"ts":1371150761992,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n * JavaScript Redstone Simulator\n * Copyright (C) 2012  Jonathan Lydall (Email: jonathan.lydall@gmail.com)\n * \n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. \n * \n */\n\n(function(){\n\tvar namespace = com.mordritch.mcSim;\n\t\n\tnamespace.Material_ = function(par1MapColor) {\n\t\tthis.canBurn = false; /** Bool defining if the block can burn or not. */\n\t\tthis.groundCover = false; /** Indicates if the material is a form of ground cover, e.g. Snow */\n\t\tthis.isTranslucent = false; /** Indicates if the material is translucent */\n\t\tthis.materialMapColor; //of type MapColor /** The color index used to draw the blocks of this material on maps. */\n\t\tthis.canHarvest = false; /* Determines if the materials is one that can be collected by the player. */\n\t\tthis.mobilityFlag = 0; /** Mobility information flag. 0 indicates that this block is normal, 1 indicates that it can't push other blocks, 2 indicates that it can't be pushed. */\n\t\n\t\tthis.construct = function(par1MapColor)\n\t\t{\n\t\t\tthis.canHarvest = true;\n\t\t\tthis.materialMapColor = par1MapColor;\n\t\t}\n\t\n\t\t/**\n\t\t * Returns if blocks of these materials are liquids.\n\t\t */\n\t\tthis.isLiquid = function()\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\n\t\tthis.isSolid = function()\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\n\t\t/**\n\t\t * Will prevent grass from growing on dirt underneath and kill any grass below it if it returns true\n\t\t */\n\t\tthis.getCanBlockGrass = function()\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\n\t\t/**\n\t\t * Returns if this material is considered solid or not\n\t\t */\n\t\tthis.blocksMovement = function()\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\n\t\t/**\n\t\t * Marks the material as translucent\n\t\t */\n\t\tthis.setTranslucent = function()\n\t\t{\n\t\t\tthis.isTranslucent = true;\n\t\t\treturn this;\n\t\t}\n\t\n\t\t/**\n\t\t * Disables the ability to harvest this material.\n\t\t */\n\t\tthis.setNoHarvest = function()\n\t\t{\n\t\t\tthis.canHarvest = false;\n\t\t\treturn this;\n\t\t}\n\t\n\t\t/**\n\t\t * Set the canBurn bool to True and return the current object.\n\t\t */\n\t\tthis.setBurning = function()\n\t\t{\n\t\t\tthis.canBurn = true;\n\t\t\treturn this;\n\t\t}\n\t\n\t\t/**\n\t\t * Returns if the block can burn or not.\n\t\t */\n\t\tthis.getCanBurn = function()\n\t\t{\n\t\t\treturn this.canBurn;\n\t\t}\n\t\n\t\t/**\n\t\t * Sets the material as a form of ground cover, e.g. Snow\n\t\t */\n\t\tthis.setGroundCover = function()\n\t\t{\n\t\t\tthis.groundCover = true;\n\t\t\treturn this;\n\t\t}\n\t\n\t\t/**\n\t\t * Return whether the material is a form of ground cover, e.g. Snow\n\t\t */\n\t\tthis.isGroundCover = function()\n\t\t{\n\t\t\treturn this.groundCover;\n\t\t}\n\t\n\t\t/**\n\t\t * Indicates if the material is translucent\n\t\t */\n\t\tthis.isOpaque = function()\n\t\t{\n\t\t\tif (this.isTranslucent)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.blocksMovement();\n\t\t\t}\n\t\t}\n\t\n\t\t/**\n\t\t * Returns true if material can be harvested by player.\n\t\t */\n\t\tthis.isHarvestable = function()\n\t\t{\n\t\t\treturn this.canHarvest;\n\t\t}\n\t\n\t\t/**\n\t\t * Returns the mobility information of the material, 0 = free, 1 = can't push but can move over, 2 = total\n\t\t * immobility and stop pistons\n\t\t */\n\t\tthis.getMaterialMobility = function()\n\t\t{\n\t\t\treturn this.mobilityFlag;\n\t\t}\n\t\n\t\t/**\n\t\t * This type of material can't be pushed, but pistons can move over it.\n\t\t */\n\t\tthis.setNoPushMobility = function()\n\t\t{\n\t\t\tmobilityFlag = 1;\n\t\t\treturn this;\n\t\t}\n\t\n\t\t/**\n\t\t * This type of material can't be pushed, and pistons are blocked to move.\n\t\t */\n\t\tthis.setImmovableMobility = function()\n\t\t{\n\t\t\tmobilityFlag = 2;\n\t\t\treturn this;\n\t\t}\n\t\n\t\tthis.construct(par1MapColor);\n\t}\n})();\n"]],"start1":0,"start2":0,"length1":0,"length2":4059}]],"length":4059}
{"contributors":[],"silentsave":true,"ts":1371150783453,"patch":[[{"diffs":[[0,"apColor)"],[-1,"\n\t\t"],[0,"{\n\t\t\tthi"]],"start1":1634,"start2":1634,"length1":19,"length2":16}]],"length":4056,"saved":false}
{"ts":1371150785450,"patch":[[{"diffs":[[0,"apColor)"],[1," "],[0,"{\n\t\t\tthi"]],"start1":1634,"start2":1634,"length1":16,"length2":17}]],"length":4057,"saved":false}
{"ts":1371150793556,"patch":[[{"diffs":[[0,"uid = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\treturn fals"]],"start1":1798,"start2":1798,"length1":35,"length2":33}]],"length":4055,"saved":false}
{"ts":1371150796193,"patch":[[{"diffs":[[0,"lid = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\treturn true"]],"start1":1851,"start2":1851,"length1":35,"length2":33}]],"length":4053,"saved":false}
{"ts":1371150802234,"patch":[[{"diffs":[[0,"ass = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\treturn true"]],"start1":2027,"start2":2027,"length1":35,"length2":33}]],"length":4051,"saved":false}
{"ts":1371150805628,"patch":[[{"diffs":[[0,"ent = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\treturn true"]],"start1":2155,"start2":2155,"length1":35,"length2":33}]],"length":4049,"saved":false}
{"ts":1371150856760,"patch":[[{"diffs":[[0,"ent = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tthis.isTran"]],"start1":2265,"start2":2265,"length1":35,"length2":33}]],"length":4047,"saved":false}
{"ts":1371150859845,"patch":[[{"diffs":[[0,"est = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tthis.canHar"]],"start1":2416,"start2":2416,"length1":35,"length2":33}]],"length":4045,"saved":false}
{"ts":1371150862003,"patch":[[{"diffs":[[0,"ing = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tthis.canBur"]],"start1":2576,"start2":2576,"length1":35,"length2":33}]],"length":4043,"saved":false}
{"ts":1371150882109,"patch":[[{"diffs":[[0,"urn = function()"],[-1,"\n\t\t"],[0,"{\n\t\t\treturn this"]],"start1":2710,"start2":2710,"length1":35,"length2":32}]],"length":4040,"saved":false}
{"ts":1371150884461,"patch":[[{"diffs":[[0,"= function()"],[-1,"\n\t\t"],[0,"{\n\t\t\tthis.gr"]],"start1":2852,"start2":2852,"length1":27,"length2":24}]],"length":4037,"saved":false}
{"ts":1371150886750,"patch":[[{"diffs":[[0,"ver = function()"],[-1,"\n\t\t"],[0,"{\n\t\t\treturn this"]],"start1":3015,"start2":3015,"length1":35,"length2":32}]],"length":4034,"saved":false}
{"ts":1371150889189,"patch":[[{"diffs":[[0,"= function()"],[-1,"\n\t\t"],[0,"{\n\t\t\tif (thi"]],"start1":3141,"start2":3141,"length1":27,"length2":24}]],"length":4031,"saved":false}
{"ts":1371150892469,"patch":[[{"diffs":[[0,"slucent)"],[-1,"\n\t\t\t"],[0,"{\n\t\t\t\tre"]],"start1":3173,"start2":3173,"length1":20,"length2":16}]],"length":4027,"saved":false}
{"ts":1371150893704,"patch":[[{"diffs":[[0,"slucent)"],[-1,"{"],[0,"\n\t\t\t\tret"]],"start1":3173,"start2":3173,"length1":17,"length2":16},{"diffs":[[0,"lse;\n\t\t\t"],[-1,"}"],[0,"\n\t\t\telse"]],"start1":3195,"start2":3195,"length1":17,"length2":16}]],"length":4025,"saved":false}
{"ts":1371150895222,"patch":[[{"diffs":[[0,"se;\n"],[-1,"\t\t\t\n"],[0,"\t\t\te"]],"start1":3196,"start2":3196,"length1":12,"length2":8}]],"length":4021,"saved":false}
{"ts":1371150897643,"patch":[[{"diffs":[[0,"lse\n"],[-1,"\t\t\t{\n"],[0,"\t\t\t\t"]],"start1":3204,"start2":3204,"length1":13,"length2":8}]],"length":4016,"saved":false}
{"ts":1371150899326,"patch":[[{"diffs":[[0,"();\n"],[-1,"\t\t\t}\n"],[0,"\t\t}\n"]],"start1":3238,"start2":3238,"length1":13,"length2":8}]],"length":4011,"saved":false}
{"ts":1371150904878,"patch":[[{"diffs":[[0,"= function()"],[1," "],[0,"{\n\t\t\tif (thi"]],"start1":3141,"start2":3141,"length1":24,"length2":25}]],"length":4012,"saved":false}
{"ts":1371150906455,"patch":[[{"diffs":[[0,"ver = function()"],[1," "],[0,"{\n\t\t\treturn this"]],"start1":3015,"start2":3015,"length1":32,"length2":33}]],"length":4013,"saved":false}
{"ts":1371150907909,"patch":[[{"diffs":[[0,"= function()"],[1," "],[0,"{\n\t\t\tthis.gr"]],"start1":2852,"start2":2852,"length1":24,"length2":25}]],"length":4014,"saved":false}
{"ts":1371150910160,"patch":[[{"diffs":[[0,"nction()"],[1," "],[0,"{\n\t\t\tret"]],"start1":2718,"start2":2718,"length1":16,"length2":17}]],"length":4015,"saved":false}
{"ts":1371150914353,"patch":[[{"diffs":[[0,"ble = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\treturn this"]],"start1":3339,"start2":3339,"length1":35,"length2":33}]],"length":4013,"saved":false}
{"ts":1371150919120,"patch":[[{"diffs":[[0,"= function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\treturn "]],"start1":3572,"start2":3572,"length1":27,"length2":25}]],"length":4011,"saved":false}
{"ts":1371150936360,"patch":[[{"diffs":[[0,"ity = function()"],[-1,"\n\t\t"],[1," "],[0,"{\n\t\t\tmobilityFla"]],"start1":3729,"start2":3729,"length1":35,"length2":33}]],"length":4009,"saved":false}
{"ts":1371150951575,"patch":[[{"diffs":[[0,"nction()"],[-1,"\n\t\t"],[0,"{\n\t\t\tmob"]],"start1":3912,"start2":3912,"length1":19,"length2":16}]],"length":4006,"saved":false}
